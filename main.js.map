{"version":3,"sources":["./src/app/stikynot/stikynot.component.ts","./src/app/stikynot/stikynot.component.html","./src/app/stikynot/dialog-overview-example-dialog.html","./src/app/login/usuario.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/auth.service.ts","./src/environments/environment.ts","./src/app/stikynot/stikynot.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/stikynot/nota.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/indexed-db.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport { StikynotService } from './stikynot.service';\nimport { Nota } from './nota';\nimport { ThemePalette } from '@angular/material/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\n\nexport interface DialogData {\n  titulo: string;\n  message: string;\n  color: string; \n}\n\n@Component({\n  selector: 'app-stikynot',\n  templateUrl: './stikynot.component.html',\n  styleUrls: ['./stikynot.component.css']\n})\nexport class StikynotComponent implements OnInit {\n\n  titulo: string;\n  message: string;\n  color: string; \n\n  public lstNotes:Nota[]; \n\n  constructor(public dialog: MatDialog,private stikynotService: StikynotService) { }\n\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      panelClass: 'full-width-dialog',\n      data: {titulo: this.titulo, message: this.message, color: this.color}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      this.color = result.color;\n      let nota:Nota = new Nota();\n      nota.titulo = result.titulo;\n      nota.message = result.message;\n      nota.color = \"#\"+result.color.hex; \n          \n      this.lstNotes.push(nota);\n      this.stikynotService.addNote(nota);\n    });\n  }\n\n  ngOnInit(): void {\n    this.stikynotService.list().subscribe(data => {\n      this.lstNotes = data;\n     });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: './dialog-overview-example-dialog.html'\n})\nexport class DialogOverviewExampleDialog {\n\n  public disabled = false;\n  public touchUi = true;\n\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div style=\"margin: 1rem;\">\n   <button mat-fab color=\"primary\" (click)=\"openDialog()\">\n    <mat-icon>add_circle_outline</mat-icon>\n   </button>\n</div>\n  \n<ul>\n    <li *ngFor=\"let note of lstNotes\">\n        <a href=\"#\" [style.backgroundColor]=\"note.color\">\n        <h2>{{note.titulo}}</h2>\n        <p>{{note.message}}</p>\n        </a>\n    </li>\n</ul>  \n","<h1 mat-dialog-title>New Stikynot</h1>\r\n<div mat-dialog-content>\r\n  <mat-form-field style=\"width: 100%;\">\r\n    <mat-label>Titulo:</mat-label>\r\n    <input matInput placeholder=\"Ex. Compras\" [(ngModel)]=\"data.titulo\" maxlength=\"19\">\r\n  </mat-form-field>\r\n  <mat-form-field style=\"width: 100%;\">\r\n    <mat-label>Mensagem:</mat-label>\r\n    <textarea matInput\r\n    #message maxlength=\"120\"\r\n    cdkTextareaAutosize\r\n    #autosize=\"cdkTextareaAutosize\"\r\n    cdkAutosizeMinRows=\"1\"\r\n    cdkAutosizeMaxRows=\"5\"\r\n    [(ngModel)]=\"data.message\"></textarea>\r\n    <mat-hint align=\"end\">{{message.value.length}} / 120</mat-hint>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <input matInput [ngxMatColorPicker]=\"picker\" [(ngModel)]=\"data.color\" readonly>\r\n    <ngx-mat-color-toggle matSuffix [for]=\"picker\"></ngx-mat-color-toggle>\r\n    <ngx-mat-color-picker #picker></ngx-mat-color-picker>\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Cancelar</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\">OK</button>\r\n</div>","export class Usuario {\r\n    email: string;\r\n    senha: string;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n\n}","<mat-toolbar color=\"primary\">\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>Monitoramento</span>\n  <span class=\"example-spacer\"></span>\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n    <mat-icon>share</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item routerLink=\"/home/stikynot\" routerLinkActive=\"active\">\n      <mat-icon>dialpad</mat-icon>\n      <span>Notas</span>\n    </button>\n    <button mat-menu-item disabled>\n      <mat-icon>voicemail</mat-icon>\n      <span>Check voice mail</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>notifications_off</mat-icon>\n      <span>Disable alerts</span>\n    </button>\n  </mat-menu>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { Injectable,EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuario } from './usuario';\r\nimport { Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private readonly API = \"https://monitoramento-backend.herokuapp.com/users\";\r\n\r\n  private usuarioAutenticado: boolean = false;\r\n  mostrarMenuEmitter = new EventEmitter<boolean>();\r\n\r\n  constructor(private router: Router, private http: HttpClient) { }\r\n\r\n  list(){\r\n    return this.http.get<Usuario[]>(this.API).pipe(\r\n    );\r\n  }\r\n\r\nprivate authUser(usuario: Usuario){  \r\n   return  this.http.post(this.API+\"/auth\", usuario)\r\n        .pipe();\r\n}\r\n\r\n  fazerLogin(usuario: Usuario){\r\n\r\n     return this.authUser(usuario);\r\n\r\n  }\r\n\r\n  public RegisterAutenticado(data: Usuario){\r\n    if(data !== null){\r\n\r\n      this.usuarioAutenticado = true;\r\n\r\n      sessionStorage.setItem(\"usuarioAutenticado\", String(this.usuarioAutenticado));\r\n\r\n     this.mostrarMenuEmitter.emit(this.usuarioAutenticado);\r\n\r\n     this.router.navigate(['/']);\r\n  }\r\n  else{\r\n   this.usuarioAutenticado = false;\r\n   this.mostrarMenuEmitter.emit(this.usuarioAutenticado);\r\n  }  \r\n  }\r\n\r\n  usuarioEstaAutenticado(){\r\n    if (!this.usuarioAutenticado){\r\n      return Boolean(sessionStorage.getItem(\"usuarioAutenticado\"));\r\n    }\r\n    return this.usuarioAutenticado;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable,EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Nota } from './nota';\r\nimport { Router } from '@angular/router';\r\nimport { take, catchError } from 'rxjs/operators';\r\nimport { IndexedDBService } from '../services/indexed-db.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StikynotService {\r\n\r\n  private readonly API = \"https://monitoramento-backend.herokuapp.com/anotacao\";\r\n\r\n  constructor(private router: Router, private http: HttpClient, private indexedDBService: IndexedDBService) { }\r\n\r\n  list(){\r\n           return this.http.get<Nota[]>(this.API).pipe();\r\n  }\r\n\r\n  public addNote(nota: Nota){  \r\n    this.http.post(this.API, nota)\r\n        .pipe(\r\n          catchError(err => {\r\n            console.log('Handling error locally and rethrowing it...', err);\r\n\r\n            this.indexedDBService\r\n            .addNota(nota)\r\n            .then(this.backgroundSync)\r\n            .catch(console.log);\r\n\r\n            return \"Backgroud item\" \r\n        })\r\n        )\r\n        .subscribe((data: Nota) => {\r\n            console.log(data);\r\n            \r\n        },err => {console.log('HTTP Error', err)});\r\n}\r\n\r\nbackgroundSync() {\r\n  navigator.serviceWorker.ready\r\n    .then((swRegistration) => swRegistration.sync.register('post-data'))\r\n    .catch(console.log);\r\n\r\n  }\r\n}\r\n","import { Component, OnInit, ApplicationRef } from '@angular/core';\nimport { SwUpdate, SwPush } from '@angular/service-worker';\nimport { interval } from 'rxjs';\nimport { IndexedDBService } from './services/indexed-db.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  title = 'monitoramento';\n  apiData: any;\n  private readonly publicKey =\n  'BJkUsZs9QYXvusPKt-2SJ_LZD8Y6L3HHEJjP9rVNaiBgjOCr5aLyGMGGJelLMi4eh-2M7SyRbQPZvEok1iYtTuA';\n\n  constructor(\n    private update: SwUpdate,\n    private appRef: ApplicationRef,\n    private swPush: SwPush,\n    private indexedDBService: IndexedDBService\n  ) {\n    this.updateClient();\n    this.checkUpdate();\n  }\n\n  ngOnInit() {\n    this.pushSubscription();\n\n    this.swPush.messages.subscribe((message) => console.log(message));\n\n    this.swPush.notificationClicks.subscribe(({ action, notification }) => {\n      window.open(notification.data.url);\n    });\n\n/*     this.http.get('http://dummy.restapiexample.com/api/v1/employees').subscribe(\n      (res: any) => {\n        this.apiData = res.data;\n      },\n      (err) => {\n        console.error(err);\n      }\n    ); */\n  }\n\n  updateClient() {\n    if (!this.update.isEnabled) {\n      console.log('Not Enabled');\n      return;\n    }\n    this.update.available.subscribe((event) => {\n      console.log(`current`, event.current, `available `, event.available);\n      if (confirm('update available for the app please conform')) {\n        this.update.activateUpdate().then(() => location.reload());\n      }\n    });\n\n    this.update.activated.subscribe((event) => {\n      console.log(`current`, event.previous, `available `, event.current);\n    });\n  }\n\n  checkUpdate() {\n    this.appRef.isStable.subscribe((isStable) => {\n      if (isStable) {\n        const timeInterval = interval(8 * 60 * 60 * 1000);\n\n        timeInterval.subscribe(() => {\n          this.update.checkForUpdate().then(() => console.log('checked'));\n          console.log('update checked');\n        });\n      }\n    });\n  }\n\n  pushSubscription() {\n    if (!this.swPush.isEnabled) {\n      console.log('Notification is not enabled');\n      return;\n    }\n\n    this.swPush\n      .requestSubscription({\n        serverPublicKey: this.publicKey,\n      })\n      .then((sub) => {\n        // Make a post call to serve\n        console.log(JSON.stringify(sub));\n      })\n      .catch((err) => console.log(err));\n  }\n\n\n\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanLoad, Route } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../login/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard  implements CanActivate, CanLoad {\r\n\r\n  constructor(private router: Router,\r\n              private authService: AuthService) { }\r\n\r\n  canActivate( router: ActivatedRouteSnapshot,\r\n               state: RouterStateSnapshot):Observable<boolean>|boolean{\r\n                  return this.verificarAcess();\r\n  }\r\n\r\n  verificarAcess(){\r\n\r\n          if (this.authService.usuarioEstaAutenticado()){\r\n\r\n              return true;\r\n\r\n          } \r\n          \r\n\r\n          this.router.navigate(['/login']);\r\n\r\n          return false;\r\n  }\r\n\r\n  canLoad(route: Route):Observable<boolean>|boolean{\r\n\r\n    let bol =   this.verificarAcess();\r\n    console.log('canLoad: '+ bol);\r\n    \r\n    return bol;\r\n  \r\n  }\r\n            \r\n\r\n}\r\n","export class Nota {\r\n    titulo: string;\r\n    message: string;\r\n    color: string; \r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatNativeDateModule} from '@angular/material/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HomeComponent } from './home/home.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\nimport { AuthService } from './login/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { StikynotService } from './stikynot/stikynot.service';\n\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { StikynotComponent, DialogOverviewExampleDialog } from './stikynot/stikynot.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport { MAT_COLOR_FORMATS, NgxMatColorPickerModule, NGX_MAT_COLOR_FORMATS } from '@angular-material-components/color-picker';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    DialogOverviewExampleDialog,\n    StikynotComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('service-worker.js', { enabled: environment.production, registrationStrategy: \"registerImmediately\"  }),\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatMenuModule,\n    TextFieldModule,\n    NgxMatColorPickerModule\n  ],\n  exports:[\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatSnackBarModule,\n    \n  ],\n  entryComponents: [HomeComponent, DialogOverviewExampleDialog],\n  providers: [\n    AuthService, \n    AuthGuard,\n    StikynotService,\n    { provide: LocationStrategy, useClass: HashLocationStrategy},\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    { provide: MAT_COLOR_FORMATS, useValue: NGX_MAT_COLOR_FORMATS }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { LoginComponent } from \"./login/login.component\";\nimport { HomeComponent } from './home/home.component';\nimport { StikynotComponent } from './stikynot/stikynot.component';\n\n\nconst routes: Routes = [\n  { path:'login', component: LoginComponent},\n  { path:'home' , component: HomeComponent,\n                children: [{\n                              path: 'stikynot', // child route path\n                              component: StikynotComponent, // child route component that the router renders\n                            }], canActivate:[AuthGuard]},                \n  { path:'', redirectTo:'/home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: false})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Usuario } from './usuario';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public usuario: Usuario = new Usuario();\n\n  public IsWait: Boolean = false; \n\n  public salvar: Boolean = false; \n  \n  constructor(private authService: AuthService, private _snackBar: MatSnackBar) { }\n\n  fazerLogin(){\n    this.IsWait = true;\n    this.authService.fazerLogin(this.usuario).subscribe((data: Usuario) => {\n\n      if (this.salvar){\n         localStorage.setItem(\"salvarUsuario\", String(this.salvar));\n         localStorage.setItem(\"UsuarioMoti\", String(this.usuario.email)); \n      } \n\n    this.authService.RegisterAutenticado(data);\n\n     if(data == null){\n      this.IsWait = false; \n      this.openSnackBar();\n     }\n\n\n    });\n  }\n\n  openSnackBar() {\n    this._snackBar.open('Login Inválido', 'Atenção', {\n      duration: 3000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\",\n    });\n  }\n\n  ngOnInit(): void {\n    sessionStorage.setItem(\"usuarioAutenticado\", String(false));\n    this.salvar = Boolean(localStorage.getItem(\"salvarUsuario\"));\n    if (this.salvar)\n      this.usuario.email = String(localStorage.getItem(\"UsuarioMoti\")); \n  }\n\n}\n","<div class=\"login-page\">\n    <mat-card class=\"mat-elevation-z12\">\n      <mat-card-title style=\"text-align:center;\">Monitoramento</mat-card-title>\n      <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\">\n        <mat-tab label=\"Começar\">\n            <mat-card-content>\n              <form action=\"\">\n                <mat-form-field>\n                  <input\n                    matInput\n                    placeholder=\"Email\"\n                    required\n                    name=\"email\"\n                    ngModel\n                    [(ngModel)]=\"usuario.email\" >\n                    <mat-error *ngIf=\"usuario.email === undefined\">Usuário requerido</mat-error>\n                  <mat-icon matSuffix>email</mat-icon>\n                </mat-form-field>\n                <mat-form-field>\n                  <input\n                    matInput\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    required\n                    name=\"senha\"\n                    ngModel\n                    [(ngModel)]=\"usuario.senha\">\n                    <mat-error\n                      *ngIf=\"usuario.senha === undefined\">\n                      Senha é necessário\n                    </mat-error>\n                  <mat-icon matSuffix>lock</mat-icon>\n                </mat-form-field>\n                  <mat-checkbox name=\"salvar\" ngModel [(ngModel)]=\"salvar\">Salvar Usuário!</mat-checkbox>\n                <button\n                  mat-raised-button\n                  color=\"primary\"\n                  class=\"login-button\"\n                  (click)=\"fazerLogin()\">\n                  Entrar\n                </button>\n              </form>\n            </mat-card-content>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  </div>\n\n  <div class=\"overlay\" *ngIf=\"IsWait\">\n    <div class=\"center\">  \n      <mat-spinner></mat-spinner>\n    </div>\n  </div>\n   \n","import { Injectable } from '@angular/core';\r\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\r\nimport { Nota } from '../stikynot/nota';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IndexedDBService {\r\n  private db: IDBPDatabase<MyDB>;\r\n  constructor() {\r\n    this.connectToDb();\r\n  }\r\n\r\n  async connectToDb() {\r\n    this.db = await openDB<MyDB>('db-motin', 1, {\r\n      upgrade(db) {\r\n        db.createObjectStore('nota-store', { autoIncrement: true });\r\n        db.createObjectStore('notas', { autoIncrement: true });\r\n      },\r\n    });\r\n  }\r\n\r\n  addNota(not: Nota) {\r\n    return this.db.add('notas',{\"titulo\": not.titulo, \"message\": not.message, \"color\": not.color});\r\n  }\r\n\r\n}\r\n\r\ninterface MyDB extends DBSchema {\r\n  'nota-store': {\r\n    key: string;\r\n    value: string;\r\n  };\r\n  notas:{\r\n    value:{\r\n      titulo: string;\r\n      message: string;\r\n      color: string; \r\n  };\r\n  key: string;\r\n  indexes: { 'Nota': number };\r\n};\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}